-- Database: cleaningCompanyDB

-- DROP DATABASE IF EXISTS "cleaningCompanyDB";

CREATE DATABASE "cleaningCompanyDB"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'Ukrainian_Ukraine.1251'
    LC_CTYPE = 'Ukrainian_Ukraine.1251'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;

-- Table: public.a_role

-- DROP TABLE IF EXISTS public.a_role;

CREATE TABLE IF NOT EXISTS public.a_role
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT a_role_pkey PRIMARY KEY (id)
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.a_role
    OWNER to postgres;

-- Table: public.a_user

-- DROP TABLE IF EXISTS public.a_user;

CREATE TABLE IF NOT EXISTS public.a_user
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    password character varying(255) COLLATE pg_catalog."default",
    username character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT a_user_pkey PRIMARY KEY (id)
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.a_user
    OWNER to postgres;

-- Table: public.a_user_roles

-- DROP TABLE IF EXISTS public.a_user_roles;

CREATE TABLE IF NOT EXISTS public.a_user_roles
(
    users_id bigint NOT NULL,
    roles_id bigint NOT NULL,
    CONSTRAINT a_user_roles_pkey PRIMARY KEY (users_id, roles_id),
    CONSTRAINT fkc082o8837p6p3hhqfbgtjupp4 FOREIGN KEY (roles_id)
        REFERENCES public.a_role (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fklgxr4rt4lfkhcned2linxhkgh FOREIGN KEY (users_id)
        REFERENCES public.a_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.a_user_roles
    OWNER to postgres;

-- Table: public.consumables

-- DROP TABLE IF EXISTS public.consumables;

CREATE TABLE IF NOT EXISTS public.consumables
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    comment character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    task_id bigint,
    CONSTRAINT consumables_pkey PRIMARY KEY (id),
    CONSTRAINT fkdx4rj8fy1pxlly2l68q15ucmo FOREIGN KEY (task_id)
        REFERENCES public.task (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.consumables
    OWNER to postgres;

-- Table: public.person

-- DROP TABLE IF EXISTS public.person;

CREATE TABLE IF NOT EXISTS public.person
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    full_name character varying(255) COLLATE pg_catalog."default",
    managerid character varying(255) COLLATE pg_catalog."default",
    name character varying(255) COLLATE pg_catalog."default",
    phone_number character varying(255) COLLATE pg_catalog."default",
    manager_id bigint,
    admin boolean,
    CONSTRAINT person_pkey PRIMARY KEY (id),
    CONSTRAINT fkkb8fb0ej36oy25j0363bncd30 FOREIGN KEY (manager_id)
        REFERENCES public.person (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.person
    OWNER to postgres;

-- Table: public.point

-- DROP TABLE IF EXISTS public.point;

CREATE TABLE IF NOT EXISTS public.point
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    adress character varying(255) COLLATE pg_catalog."default",
    comment character varying(255) COLLATE pg_catalog."default",
    contact_number character varying(255) COLLATE pg_catalog."default",
    contact_person character varying(255) COLLATE pg_catalog."default",
    latitude double precision,
    longitude double precision,
    name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT point_pkey PRIMARY KEY (id)
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.point
    OWNER to postgres;

-- Table: public.position

-- DROP TABLE IF EXISTS public."position";

CREATE TABLE IF NOT EXISTS public."position"
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    comment character varying(255) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    task_id bigint,
    CONSTRAINT position_pkey PRIMARY KEY (id),
    CONSTRAINT fk7m3ocd2p97symplncsd1eggmt FOREIGN KEY (task_id)
        REFERENCES public.task (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."position"
    OWNER to postgres;

-- Table: public.task

-- DROP TABLE IF EXISTS public.task;

CREATE TABLE IF NOT EXISTS public.task
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    date timestamp without time zone,
    pointid character varying(255) COLLATE pg_catalog."default",
    point_id bigint,
    CONSTRAINT task_pkey PRIMARY KEY (id),
    CONSTRAINT fkfh00pc4k881e9lejhau5y8485 FOREIGN KEY (point_id)
        REFERENCES public.point (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.task
    OWNER to postgres;
-- Index: idx_task_point_id

-- DROP INDEX IF EXISTS public.idx_task_point_id;

CREATE INDEX IF NOT EXISTS idx_task_point_id
    ON public.task USING btree
        (point_id ASC NULLS LAST)
    TABLESPACE pg_default;

-- Table: public.task_person_link

-- DROP TABLE IF EXISTS public.task_person_link;

CREATE TABLE IF NOT EXISTS public.task_person_link
(
    task_id bigint NOT NULL,
    person_id bigint NOT NULL,
    CONSTRAINT fk212f8cvl0kktl6uvd99f0vrfx FOREIGN KEY (person_id)
        REFERENCES public.person (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fkl3ckxtolywhjadsw9mpffwjvi FOREIGN KEY (task_id)
        REFERENCES public.task (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.task_person_link
    OWNER to postgres;